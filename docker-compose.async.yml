version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python scripts/start_worker.py
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - HEADLESS_BROWSER=true
      - LOG_LEVEL=INFO
    volumes:
      - ./backend:/app
      - /dev/shm:/dev/shm
    restart: unless-stopped

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python scripts/start_beat.py
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    volumes:
      - ./backend:/app
    restart: unless-stopped

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A backend.services.async_jobs.celery_config flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
    restart: unless-stopped

volumes:
  redis_data: